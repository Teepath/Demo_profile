{"version":3,"sources":["index.js"],"names":["token","myFunction","document","getElementById","value","username","headers","Authorization","axios","post","JSON","stringify","query","method","then","response","console","log","data","user","avatarUrl","myLoadData","catch","err","getUserRepo","body","innerHTML","baseUrl","name","bio","email","repositories","createdAt","src","alias","edges","length","appendToDOM","res","map","node","li","createElement","style","width","display","justifyContent","alignItems","borderBottom","id","url","append","createDiv","buttonTag","appendChild","createTag","div","updateAt","span","Date","updatedAt","lang","em","primaryLanguage","flexDirection","repo_name","color","fontSize","button","height","buttonStar","setAttribute","createEm"],"mappings":";AACC,IAAIA,EAAJ,2CAED,SAASC,IACUC,SAASC,eAAe,eAAeC,MAAlDC,IA6CEC,EAAU,CACdC,cAAyBP,UAAAA,OAAAA,IAG3BQ,MACGC,KAPa,iCAOCC,KAAKC,UAjDT,CACXC,MAAK,8xBAgDgC,CACnCC,OAAQ,OACRP,QAASA,IAEVQ,KAAK,SAACC,GACLC,QAAQC,IAAIF,EAASG,KAAKA,KAAKC,KAAKC,WACpCC,EAAWN,EAASG,KAAKA,QAG1BI,MAAM,SAACC,GAAQP,OAAAA,QAAQC,IAAIP,KAAKC,UAAUY,MAUjD,SAASC,IAGHnB,IAAAA,EAAWH,SAASC,eAAe,eAAeC,MAMhDqB,EAAO,CACXb,MACaP,2BAAAA,OAAa,KAAbA,EAAkBK,KAAKC,UAAUN,GAAY,UADrD,6vBA2CPH,SAASC,eAAe,WAAWuB,UAAY,GACzCC,IAEArB,EAAU,CACdC,cAAyBP,UAAAA,OAAAA,IAG3BQ,MACGC,KAPa,iCAOCC,KAAKC,UAAUc,GAAO,CACnCZ,OAAQ,OACRP,QAASA,IAEVQ,KAAK,SAACC,GACLC,QAAQC,IAAIF,EAASG,KAAKA,KAAKC,KAAKC,WAErCC,EAAWN,EAASG,KAAKA,QAGzBI,MAAM,SAACC,GAAQP,OAAAA,QAAQC,IAAIP,KAAKC,UAAUY,MA1E/CtB,IAiFA,IAAMoB,EAAa,SAACH,GAE+CA,IAAAA,EAAAA,EAAKC,KAA9DC,EAAAA,EAAAA,UAAWQ,EAAAA,EAAAA,KAAaC,GAAPC,EAAAA,MAAOD,EAAAA,KAAgBE,GAAXC,EAAAA,UAAWD,EAAAA,cAChD7B,SAASC,eAAe,UAAU8B,IAAMb,EACvClB,SAASC,eAAe,QAAQuB,UAAYE,EACzCM,IAAAA,EAAQhC,SAASC,eAAe,eAAeC,MACnDF,SAASC,eAAe,SAASuB,UAAYQ,EAC7ChC,SAASC,eAAe,OAAOuB,UAAYG,EAC3C3B,SAASC,eAAe,cAAcuB,UAAYK,EAAaI,MAAMC,OAEjDlC,SAASC,eAAe,WAQ5CkC,EAAYN,EAAaI,QAQrBE,EAAc,SAACC,GACHpC,SAASC,eAAe,WAC1Ca,QAAQC,IAAIqB,GACVA,EAAIC,IAAI,SAAc,GAAXC,IAAAA,EAAAA,EAAAA,KAEHC,EAAKvC,SAASwC,cAAc,MAClCD,EAAGE,MAAMC,MAAQ,OACjBH,EAAGE,MAAME,QAAU,OACnBJ,EAAGE,MAAMG,eAAiB,gBAC1BL,EAAGE,MAAMI,WAAa,SACtBN,EAAGE,MAAMK,aAAe,kBACxBP,EAAGQ,GAAKT,EAAKU,IAEbT,EAAGU,OAAOC,EAAUZ,GAAOa,KAC3BnD,SAASC,eAAe,WAAWmD,YAAYb,MAQ7Cc,EAAY,SAACf,GACXgB,IAAAA,EAAMtD,SAASwC,cAAc,OAQ5Bc,OAPPA,EAAIb,MAAMC,MAAQ,OAClBY,EAAIb,MAAME,QAAU,OACpBW,EAAIb,MAAMG,eAAiB,eAC3BU,EAAIb,MAAMI,WAAa,SAEvBS,EAAIF,YAAYG,EAASjB,IAElBgB,GAIHC,EAAW,SAACjB,GACVkB,IAAAA,EAAOxD,SAASwC,cAAc,QAE7BgB,OADPA,EAAKhC,UAA0B,cAAA,OAAA,IAAIiC,KAAKnB,EAAKoB,YACtCF,GAGHG,EAAO,SAACrB,GACLsB,IAAAA,EAAK5D,SAASwC,cAAc,MAG5BoB,OADPA,EAAGpC,UAAYc,EAAKuB,gBAAgBnC,KAC7BkC,GAMHV,EAAY,SAACZ,GAGXgB,IAAAA,EAAMtD,SAASwC,cAAc,OACnCc,EAAIb,MAAME,QAAU,OACpBW,EAAIb,MAAMqB,cAAgB,SAC1BR,EAAIb,MAAMG,eAAiB,eAC3BU,EAAIb,MAAMI,WAAa,aACvBS,EAAIb,MAAMC,MAAQ,MAEZqB,IAAAA,EAAY/D,SAASwC,cAAc,KAMlCc,OALPS,EAAUtB,MAAMuB,MAAQ,OACxBD,EAAUtB,MAAMwB,SAAW,MAC3BF,EAAUvC,UAAYc,EAAKZ,KAC3B4B,EAAIL,OAAOc,EAAWV,EAAUf,IAEzBgB,GAIHH,EAAY,WACVe,IAAAA,EAASlE,SAASwC,cAAc,UAQ/B0B,OAPPA,EAAOzB,MAAME,QAAU,OACvBuB,EAAOzB,MAAMG,eAAiB,YAC9BsB,EAAOzB,MAAM0B,OAAS,OACtBC,WAAapE,SAASwC,cAAc,MACpC4B,WAAWC,aAAa,QAAS,eACjCH,EAAO1C,UAAY,QACnB0C,EAAOd,YAAYgB,YACZF,GAGHI,EAAW,SAAChC,GACRgB,IAAAA,EAAMtD,SAASwC,cAAc,OAG9Bc,OAFPA,EAAIe,aAAa,QAAS,iBAC1Bf,EAAI9B,UAAYc,EAAKuB,gBAAgBnC,KAC9B4B","file":"githubDemo.bb725239.js","sourceRoot":"..","sourcesContent":["\n var token = process.env.GITHUB_KEY;\n\nfunction myFunction() {\n    let username = document.getElementById(\"search_term\").value;\n    const body = {\n      query: `query {\n    user(login:\"Teepath\" ){\n      avatarUrl\n      createdAt\n      bio\n      name\n      \n      email\n      repositories(first: 20, orderBy:{field: CREATED_AT, direction:DESC}){\n           edges{\n            node{\n              ... on Repository{\n                name,\n                id,\n                owner{\n                  login\n                },\n                stargazers{\n                  totalCount\n                },\n                primaryLanguage {\n                  name\n                }\n                description\n                url\n                pushedAt\n                updatedAt\n                forkCount\n               \n                \n               \n              }\n            }\n          }\n      }\n      \n    }\n  }\n  `,\n    };\n\n    const baseUrl = \"https://api.github.com/graphql\";\n\n    const headers = {\n      Authorization: `Bearer ${token}`,\n    };\n\n    axios\n      .post(baseUrl, JSON.stringify(body), {\n        method: \"POST\",\n        headers: headers,\n      })\n      .then((response) => {\n        console.log(response.data.data.user.avatarUrl);\n        myLoadData(response.data.data);\n \n      })\n      .catch((err) => console.log(JSON.stringify(err)));\n  \n  \n \n  \n}\n\nmyFunction()\n\n\nfunction getUserRepo(){\n \n  // var token =process.env.GITHUB_TOKEN;\n  let username = document.getElementById(\"search_term\").value;\n\n  const git_data = {\n    // \"token\": \"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\",\n    // \"username\": \"Teepath\",\n  };\n  const body = {\n    query: `query {\n    user(login:${username !== \"\" ? JSON.stringify(username) : \"Teepath\"} ){\n      avatarUrl\n      createdAt\n      bio\n      name\n      \n      email\n      repositories(first: 20, orderBy:{field: CREATED_AT, direction:DESC}){\n           edges{\n            node{\n              ... on Repository{\n                name,\n                id,\n                owner{\n                  login\n                },\n                stargazers{\n                  totalCount\n                },\n                primaryLanguage {\n                  name\n                }\n                description\n                url\n                pushedAt\n                updatedAt\n                forkCount\n               \n                \n               \n              }\n            }\n          }\n      }\n      \n    }\n  }\n  `,\n\n\n  }\n\n  document.getElementById(\"display\").innerHTML = \"\";\n  const baseUrl = \"https://api.github.com/graphql\";\n\n  const headers = {\n    Authorization: `Bearer ${token}`\n  };\n\n  axios\n    .post(baseUrl, JSON.stringify(body), {\n      method: \"POST\",\n      headers: headers,\n    })\n    .then((response) => {\n      console.log(response.data.data.user.avatarUrl);\n   \n     myLoadData(response.data.data);\n \n    })\n    .catch((err) => console.log(JSON.stringify(err)));\n  \n\n}\n\n\n\nconst myLoadData = (data) => {\n\n  const { avatarUrl, name, email, bio, createdAt, repositories } = data.user;\n  document.getElementById(\"avatar\").src = avatarUrl;\n   document.getElementById(\"name\").innerHTML = name;\n  let alias = document.getElementById(\"search_term\").value;\n  document.getElementById(\"alias\").innerHTML = alias;\n  document.getElementById(\"bio\").innerHTML = bio;\n  document.getElementById(\"repo_total\").innerHTML = repositories.edges.length;\n  // console.log(repositories.edges);\n  const displayList = document.getElementById('display');\n\n \n\n  // repositories.edges.forEach((file) => {\n  //   console.log(file)\n  // })\n    \n  appendToDOM(repositories.edges);\n  \n   \n}\n\n\n\n\nconst appendToDOM = (res) => {\n  const display = document.getElementById('display');\nconsole.log(res)\n  res.map(({ node }) => {\n   \n    const li = document.createElement('LI');\n    li.style.width = \"100%\";\n    li.style.display = \"flex\";\n    li.style.justifyContent = \"space-between\";\n    li.style.alignItems = \"center\";\n    li.style.borderBottom = \" 1px solid grey\";\n    li.id = node.url;\n  \n    li.append(createDiv(node), buttonTag());\n    document.getElementById(\"display\").appendChild(li)\n \n  });\n\n \n};\n\n\nconst createTag = (node) => {\n  const div = document.createElement('div');\n  div.style.width = \"100%\";\n  div.style.display = \"flex\";\n  div.style.justifyContent = \"space-around\";\n  div.style.alignItems = \"center\";\n  \n  div.appendChild(updateAt(node));\n\n  return div;\n  \n}\n\nconst updateAt = (node) => {\n  const span = document.createElement('span');\n  span.innerHTML = `updated at ${new Date(node.updatedAt)}`;\n  return span;\n}\n\nconst lang = (node) => {\n   const em = document.createElement('em');\n  // em.setAttribute(\"class\", \"fas fa-circle\");\n  em.innerHTML = node.primaryLanguage.name;\n  return em;\n}\n\n\n\n\nconst createDiv = (node) => {\n\n  // li.appendChild(mainInfo)\n  const div = document.createElement('div');\n  div.style.display = \"flex\";\n  div.style.flexDirection = \"column\";\n  div.style.justifyContent = \"space-around\";\n  div.style.alignItems = \"flex-start\";\n  div.style.width = \"80%\";\n\n  const repo_name = document.createElement('p');\n  repo_name.style.color = \"blue\";\n  repo_name.style.fontSize = \"90%\";\n  repo_name.innerHTML = node.name;\n  div.append(repo_name, createTag(node));\n  // div.appendChild(createLi(node), buttonTag())\n  return div;\n}\n\n\nconst buttonTag = () => {\n  const button = document.createElement('Button');\n  button.style.display = \"flex\";\n  button.style.justifyContent = \" flex-end\";\n  button.style.height = \"30px\"\n  buttonStar = document.createElement('em');\n  buttonStar.setAttribute('class', \"fas fa-star\");\n  button.innerHTML = \"start\";\n  button.appendChild(buttonStar)\n  return button;\n}\n\nconst createEm = (node) => {\n    const div = document.createElement('div');\n  div.setAttribute(\"class\", \"fas fa-circle\");\n  div.innerHTML = node.primaryLanguage.name;\n  return div;\n}\n\n\n\n\n\n\n\n\n\n\n\n"]}